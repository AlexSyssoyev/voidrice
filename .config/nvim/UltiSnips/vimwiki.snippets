priority -50

global !p
# A overkill(dirty) table with automatic alignment feature
def create_table(snip):
	# retrieving single line from current string and treat it like tabstops count
	placeholders_string = snip.buffer[snip.line].strip()
	rows_amount = int(placeholders_string[0])
	columns_amount = int(placeholders_string[1])
	prefix_str = "from vimsnippets import display_width;"
	# erase current line
	snip.buffer[snip.line] = ""
	# create anonymous snippet with expected content and number of tabstops
	anon_snippet_title = "| "
	anon_snippet_delimiter = "|"
	for col in range(1, columns_amount+1):
		sync_rows = [x*columns_amount+col for x in range(rows_amount+1)]
		sync_str = ",".join(["t[{0}]".format(x) for x in sync_rows])
		max_width_str = "max(list(map(display_width, [" + sync_str + "])))"
		cur_width_str = "display_width(t[" + str(col) + "])"
		rv_val = "(" + max_width_str + "-" + cur_width_str + ")*' '"
		anon_snippet_title += "${" + str(col)  + ":head" + str(col)\
			+ "}`!p " + prefix_str + "snip.rv=" + rv_val + "` | "
		anon_snippet_delimiter += ":`!p " + prefix_str + "snip.rv = "\
			+ max_width_str + "*'-'" + "`-|"
	anon_snippet_title += "\n"
	anon_snippet_delimiter += "\n"
	anon_snippet_body = ""
	for row in range(1, rows_amount+1):
		body_row = "| "
		for col in range(1, columns_amount+1):
			sync_rows = [x*columns_amount+col for x in range(rows_amount+1)]
			sync_str = ",".join(["t[{0}]".format(x) for x in sync_rows])
			max_width_str = "max(list(map(display_width, [" + sync_str + "])))"
			cur_width_str = "display_width(t[" + str(row*columns_amount+col) + "])"
			rv_val = "(" + max_width_str + "-" + cur_width_str + ")*' '"
			placeholder = "R{0}C{1}".format(row, col)
			body_row += "${" + str(row*columns_amount+col)  + ":" + placeholder\
				+ "}`!p " + prefix_str + "snip.rv=" + rv_val + "` | "
		body_row += "\n"
		anon_snippet_body += body_row
	anon_snippet_table = anon_snippet_title + anon_snippet_delimiter + anon_snippet_body
	# expand anonymous snippet
	snip.expand_anon(anon_snippet_table)
endglobal

###########################
# Sections and Paragraphs #
###########################
snippet sec "Section" b
# ${1:Section Name} #
$0
endsnippet

snippet ssec "Sub Section" b
## ${1:Section Name} ##
$0
endsnippet

snippet sssec "SubSub Section" b
### ${1:Section Name} ###
$0
endsnippet

snippet par "Paragraph" b
#### ${1:Paragraph Name} ####
$0
endsnippet

snippet spar "Paragraph" b
##### ${1:Paragraph Name} #####
$0
endsnippet

###################
# Text formatting #
###################

snippet * "italics"
*${1:${VISUAL}}*$0
endsnippet

snippet ** "bold"
**${1:${VISUAL}}**$0
endsnippet

snippet *** "bold italics"
***${1:${VISUAL}}***$0
endsnippet

snippet /* "Comment"
<!-- ${1:${VISUAL}} -->$0
endsnippet

################
# Common stuff #
################
snippet link "Link to something"
[${1:${VISUAL:Text}}](${3:https://${2:www.url.com}})$0
endsnippet

snippet img "Image"
![${1:pic alt}](${2:path}${3/.+/ "/}${3:opt title}${3/.+/"/})$0
endsnippet

snippet ilc "Inline Code" i
\`$1\`$0
endsnippet

snippet cbl "Codeblock" b
\`\`\`
$1
\`\`\`
$0
endsnippet

snippet refl "Reference Link"
[${1:${VISUAL:Text}}][${2:id}]$0

[$2]:${4:https://${3:www.url.com}} "${5:$4}"
endsnippet

snippet fnt "Footnote"
[^${1:${VISUAL:Footnote}}]$0

[^$1]:${2:Text}
endsnippet

snippet detail "Disclosure"
<details${3: open=""}>
  ${1:<summary>${2}</summary>}$0
</details>
endsnippet

post_jump "create_table(snip)"
snippet "tb([1-9][1-9])" "Fancy table" br
`!p snip.rv = match.group(1)`
endsnippet

snippet li "List"
* [ ] ${1:${VISUAL}} $0
endsnippet

snippet todj "Today list"
[`date "+%Y %b %d (%A)"`](journal/`date "+%Y-%m-%d"`.md)$0
endsnippet

snippet todd "Today list"
[=== `date --date="tomorrow" +"%Y %b %d (%a)"` ===](`date --date="tomorrow" +"%Y-%m-%d"`.md)$0
endsnippet

snippet general "Todo list general"
* [ ] General:
	* [ ] Desarmar la cama.
	* [ ] Meditar $1 minutos. Prep + 4 pasos. following, connecting and labeling.
	* [ ] Wim hof semana $2 dia $3.
	* [ ] Mewing.
	* [ ] Filosofia: $4.
	* [ ] Hacer la cama.
	* [ ] Abajo:
		* [ ] Lavar los platos.
		* [ ] Cepillarme los dientes.
		* [ ] Lavarme la cara.
	* [ ] Entrenar:
		* [ ] [5weeks](http://igorvoitenko.com/5weeks) Dia $5. **Respirar lo menos posible y por la nariz**
		* [ ] [Fist](https://youtu.be/2Ioe3PxxyR4?t=136) conditioning si se siente bien. 3 sets por 15 reps
	* [ ] Pasar la aspiradora, limpiar y ordenar.
	* [ ] Ducha. $6.
	* [ ] Crema cara y cicat.
	* [ ] [Memoria](../Matematica.md):
		* [ ] Repasar anki.
		* [ ] Repasar todo sin ver imagenes.
		* [ ] $7.
	* [ ] [Estirar](https://www.reddit.com/r/flexibility/wiki/starting_to_stretch)
	* [ ] [Journaling](../Journal): Escribir tres renglones.
	* [ ] Registrar habitos.
	* [ ] Checklist de ma√±ana:
		* [ ] Domingo: Trapear, cambiar las sabanas y repasar journals.
	* [ ] Final del dia:
		* [ ] Cepillarme los dientes.
		* [ ] Lavarme la cara.
		* [ ] Freediving co2 y wonka
		* [ ] Medit 5 min
$0
endsnippet

# CALENDAR
snippet calendar "Calendar"
| Lunes | Martes | Miercoles | Jueves | Viernes | Sabado | Domingo | Racha |
| :---  | :---   | :---      | :---   | :---    | :---   | :---    | :---  |
| $1    | $2     |  $3       | $4     |  $5     | $6     | $7      |       |
| $8    |  $9    | $10       | $11    | $12     | $13    | $14     |       |
| $15   | $16    | $17       | $18    | $19     | $20    | $21     |       |
| $22   | $23    | $24       | $25    | $26     | $27    |$28      |       |
| $29   | $30    | $31       | $32    | $33     | $34    | $35     |       |
| $36   | $37    | $38       | $39    | $40     | $41    | $42     |       |
$0
endsnippet
